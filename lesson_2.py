# 1.
# Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
print("----------1----------")
example = set('alterations')
list_example = [1, [True, False], {'one': 1, 'four': 4}, example, 'something also', 4.5, False, (5, 5, 5), None]

for el in list_example:
    print(type(el))

# 2.
# Для списка реализовать обмен значений соседних элементов,
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

# !!!возник вопрос при выполнении задания, если очищать список не так как сделала я new_list = []
# !!!а писать new_list.clear(), то почемуто получается ошибка и все символы превращаются в w...
print("----------2----------")
word = input("Напишите слово: ")
print(f"Вы ввели слово: {word}!")
print("Теперь перетасуем...")

total_list = []
new_list = []
new_string = ''
for w in word:
    if len(new_list) < 2:
        new_list.append(w)
    else:
        total_list.append(new_list)
        new_list = [w]
total_list.append(new_list)

for l in total_list:
    l.reverse()
    new_string += ''.join(l)

print(new_string)

# 3.
# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
print("----------3----------")
month = input("Введите числовое значение месяца: ")

dict_month = {
    '1': 'Зима',
    '2': 'Зима',
    '3': 'Весна',
    '4': 'Весна',
    '5': 'Весна',
    '6': 'Лето',
    '7': 'Лето',
    '8': 'Лето',
    '9': 'Осень',
    '10': 'Осень',
    '11': 'Осень',
    '12': 'Зима',
}

print(f"Ваше время года: {dict_month.get(month)}!!")

month = int(month)
list_season = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 1, 2]]
if month in list_season[0]:
    print("Ваше время года Весна!")
elif month in list_season[1]:
    print("Ваше время года Лето!")
elif month in list_season[2]:
    print("Ваше время года Осень!")
elif month in list_season[3]:
    print("Ваше время года Зима!")

# 4
# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.
print("----------4----------")
# string_exmple = "Пользователь вводит строку из нескольких слов, разделённых пробелами. " \
#                 "Вывести каждое слово с новой строки. Строки необходимо пронумеровать. " \
#                 "Если в слово длинное, выводить только первые 10 букв в слове."

string_example = input("Введите предложение из нескольких слов: ")

new_list = string_example.split(" ")
for i, word in enumerate(new_list):
    print(i, word[:10])

# 5
# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
print("----------5----------")
my_list = [7, 5, 3, 3, 2]
new_value = int(input("Добавьте рейтинг: "))
for i, j in enumerate(my_list):
    if new_value > j:
        my_list.insert(i, new_value)
        break
    elif i == len(my_list) - 1:
        my_list.append(new_value)
        break

print(my_list)

# 6
# *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь,
# в котором каждый ключ — характеристика товара, например название,
# а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
#     “название”: [“компьютер”, “принтер”, “сканер”],
#     “цена”: [20000, 6000, 2000],
#     “количество”: [5, 2, 7],
#     “ед”: [“шт.”]
# }
print("----------6----------")
naming = ''
list_all_catalog = []
i = 0
print("Давайте заполним каталог товаров!")
print("Если вы хотите закончить добавление товаров в каталог, введите 'стоп'")
while naming != 'стоп':
    i += 1
    naming = input("Введите название товара: ")
    if naming != 'стоп':
        try:
            price = float(input("Введите цену товара: "))
        except ValueError:
            print("Введите цену, иначе не получится собрать каталог...")
            price = int(input("Введите цену товара: "))
        try:
            count = int(input("Введите кол-во товара: "))
        except ValueError:
            print("Введите кол-во, иначе не получится собрать каталог...")
            count = int(input("Введите кол-во товара: "))
        dict_catalog = {'Название': naming, 'Цена': price, 'Количество': count}
        new_set = (i, dict_catalog)
        list_all_catalog.append(new_set)

new_dict = {}
for item in list_all_catalog:
    # добавляем ключи, если их нет создаем
    for dic in item[1]:
        new_dict.setdefault(dic, [])
        new_dict[dic].append(item[1][dic])

print(new_dict)
